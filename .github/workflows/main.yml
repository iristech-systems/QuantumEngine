name: Publish to PyPI

on:
  # Publish when a release is created
  release:
    types: [published]
  
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      publish_to:
        description: 'Publish to'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install core dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build pytest
        pip install -e .
    
    - name: Run core tests
      run: |
        python test_modular_installation.py
    
    - name: Test imports
      run: |
        python -c "from src.quantumengine.fields import StringField, LowCardinalityField; print('âœ… Core imports working')"
        python -c "from src.quantumengine.clickhouse_functions import has, toDate; print('âœ… Functions working')"

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: python -m twine check dist/*
    
    - name: List package contents
      run: |
        echo "ðŸ“¦ Built packages:"
        ls -la dist/
        echo ""
        echo "ðŸ“‹ Package contents:"
        python -m zipfile -l dist/*.whl || true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.publish_to == 'testpypi' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to == '')
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        print-hash: true

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event.inputs.publish_to == 'pypi'
    environment: production  # Require manual approval for production
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        print-hash: true
